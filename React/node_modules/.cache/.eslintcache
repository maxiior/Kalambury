[{"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\index.js":"1","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\App.js":"2","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\reportWebVitals.js":"3","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Board.js":"4","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\TextInput.js":"5","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Footer.js":"6","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\PlayersList.js":"7","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Header.js":"8","C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\MessagesList.js":"9","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\index.js":"10","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\App.js":"11","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\reportWebVitals.js":"12","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Board.js":"13","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Footer.js":"14","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\TextInput.js":"15","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\MessagesList.js":"16","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Header.js":"17","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\PlayersList.js":"18"},{"size":501,"mtime":1617102781608,"results":"19","hashOfConfig":"20"},{"size":207,"mtime":1617104437675,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1616448070701,"results":"22","hashOfConfig":"20"},{"size":5526,"mtime":1617114120070,"results":"23","hashOfConfig":"20"},{"size":597,"mtime":1617113786523,"results":"24","hashOfConfig":"20"},{"size":303,"mtime":1617114396253,"results":"25","hashOfConfig":"20"},{"size":608,"mtime":1617110269805,"results":"26","hashOfConfig":"20"},{"size":238,"mtime":1617107487460,"results":"27","hashOfConfig":"20"},{"size":356,"mtime":1617114070033,"results":"28","hashOfConfig":"20"},{"size":501,"mtime":1617102781608,"results":"29","hashOfConfig":"30"},{"size":207,"mtime":1617104437675,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1616448070701,"results":"32","hashOfConfig":"30"},{"size":5668,"mtime":1618648759147,"results":"33","hashOfConfig":"30"},{"size":303,"mtime":1617114396253,"results":"34","hashOfConfig":"30"},{"size":601,"mtime":1618647557213,"results":"35","hashOfConfig":"30"},{"size":396,"mtime":1618648623449,"results":"36","hashOfConfig":"30"},{"size":406,"mtime":1618650697324,"results":"37","hashOfConfig":"30"},{"size":608,"mtime":1617110269805,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjoyot",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"rcfjpf",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\index.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\App.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\reportWebVitals.js",[],["78","79"],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Board.js",["80","81"],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\TextInput.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Footer.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\PlayersList.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\Header.js",[],"C:\\Users\\Maksim\\Desktop\\KalamburREST\\Frontend\\kalambury\\src\\components\\MessagesList.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\index.js",[],["82","83"],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\App.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\reportWebVitals.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Board.js",["84","85","86"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport './styles/board.css';\r\nimport TextInput from './TextInput';\r\nimport PlayersList from './PlayersList';\r\nimport Header from './Header';\r\nimport MessagesList from './MessagesList';\r\n\r\nconst Board = () => {\r\n  const canvasRef = useRef(null);\r\n  const colorsRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  const [players, setPlayer] = useState([\r\n    {\r\n      id: 1,\r\n      nick: 'maxiior',\r\n      points: 250\r\n    },\r\n    {\r\n      id: 2,\r\n      nick: 'maki',\r\n      points: 120\r\n    },\r\n    {\r\n      id: 3,\r\n      nick: 'misior',\r\n      points: 220\r\n    },\r\n    {\r\n      id: 4,\r\n      nick: 'tadeo',\r\n      points: 190\r\n    },\r\n  ])\r\n\r\n  const [messages, setMessage] = useState([])\r\n  const [selectedColor, setSelectedColor] = useState('s-color black')\r\n  const colorsToChoose = ['red', 'green', 'blue', 'yellow', 'orange', 'pink', 'purple', 'gray', 'black'] \r\n\r\n  const addMessage = (message) => {\r\n    const id = Math.floor(Math.random() * 10000) + 1\r\n    const newMessage = { id, ...message }\r\n    setMessage([...messages, newMessage])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const test = colorsRef.current;\r\n    const context = canvas.getContext('2d');\r\n    let dataURL = '';\r\n    const colors = document.getElementsByClassName('color');\r\n    const current = {\r\n      color: 'black',\r\n    };\r\n    const onColorUpdate = (e) => {\r\n      current.color = e.target.className.split(' ')[1];\r\n    };\r\n    for (let i = 0; i < colors.length; i++) {\r\n      colors[i].addEventListener('click', onColorUpdate, false);\r\n    }\r\n    \r\n    let drawing = false;\r\n    const drawLine = (x0, y0, x1, y1, color, send) => {\r\n      context.beginPath();\r\n      context.moveTo(x0, y0);\r\n      context.lineTo(x1, y1);\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n      context.closePath();\r\n      context.save();\r\n      dataURL = canvasRef.current.toDataURL('image/png');\r\n      if (!send) { return; }\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n      if(socketRef.current.readyState != 0){\r\n      socketRef.current.send(JSON.stringify({\r\n        x0: x0 / w,\r\n        y0: y0 / h,\r\n        x1: x1 / w,\r\n        y1: y1 / h,\r\n        color,\r\n        \r\n      }))\r\n    }\r\n\r\n    };\r\n\r\n    const onMouseDown = (e) => {\r\n      drawing = true;\r\n      current.x = e.clientX || e.touches[0].clientX;\r\n      current.y = e.clientY || e.touches[0].clientY;\r\n    };\r\n    \r\n    const onMouseMove = (e) => {\r\n      if (!drawing) { return; }\r\n      drawLine(current.x, current.y, e.clientX ||\r\n      e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\r\n      current.x = e.clientX || e.touches[0].clientX;\r\n      current.y = e.clientY || e.touches[0].clientY;\r\n\r\n    };\r\n    \r\n    const onMouseUp = (e) => {\r\n      if (!drawing) { return; }\r\n      drawing = false;\r\n      drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\r\n    };\r\n\r\n    const throttle = (callback, delay) => {\r\n      let previousCall = new Date().getTime();\r\n      return function() {\r\n        const time = new Date().getTime();\r\n        if ((time - previousCall) >= delay) {\r\n          previousCall = time;\r\n          callback.apply(null, arguments);\r\n        }\r\n      };\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown, false);\r\n    canvas.addEventListener('mouseup', onMouseUp, false);\r\n    canvas.addEventListener('mouseout', onMouseUp, false);\r\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\r\n    canvas.addEventListener('touchstart', onMouseDown, false);\r\n    canvas.addEventListener('touchend', onMouseUp, false);\r\n    canvas.addEventListener('touchcancel', onMouseUp, false);\r\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\r\n\r\n    const onResize = () => {\r\n      canvas.width = 600;\r\n      canvas.length = 600;\r\n      let img = document.createElement('img');\r\n      img.src = dataURL;\r\n      context.drawImage(img, 0,0);\r\n      context.restore();\r\n    };\r\n\r\n    window.addEventListener('resize', onResize, false);\r\n    onResize();\r\n\r\n    const onDrawingEvent = (data) => {\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n      drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\r\n    }\r\n\r\n    socketRef.current = new WebSocket('ws://'+ window.location.host)\r\n    socketRef.current.onopen = e => {\r\n      console.log('open', e)\r\n    }\r\n\r\n    socketRef.current.onmessage = e => {\r\n      onDrawingEvent(JSON.parse(e.data))\r\n    }\r\n\r\n    socketRef.current.onerror = e => {\r\n      console.log('error', e)\r\n    }\r\n    \r\n  }, []);\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <Header />\r\n        <div className=\"inline\">\r\n          <div ref={colorsRef} className=\"colors\">\r\n            \r\n              {colorsToChoose.map((color) => (\r\n                <div className={`color ${color}`} onClick ={() => setSelectedColor(`s-color ${color}`)}/>\r\n              ))}\r\n            \r\n            <div className='selected-color'>Color</div>\r\n            <div className={selectedColor} />\r\n          </div>\r\n          <div>\r\n            <div className=\"inline\">\r\n              <div>\r\n                <canvas ref={canvasRef} className=\"whiteboard\" />\r\n              </div>\r\n              <PlayersList players={players}/>\r\n            </div>\r\n            <TextInput onAdd={addMessage}/>\r\n            <MessagesList messages={messages} setMessage={setMessage}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Board;","C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Footer.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\TextInput.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\MessagesList.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\Header.js",[],"C:\\Users\\Maksim\\Desktop\\repos\\Kalambury\\React\\src\\components\\PlayersList.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":19,"nodeType":"93","messageId":"94","endLine":13,"endColumn":28},{"ruleId":"91","severity":1,"message":"95","line":46,"column":11,"nodeType":"93","messageId":"94","endLine":46,"endColumn":15},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":19,"nodeType":"93","messageId":"94","endLine":13,"endColumn":28},{"ruleId":"91","severity":1,"message":"95","line":48,"column":11,"nodeType":"93","messageId":"94","endLine":48,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":76,"column":39,"nodeType":"100","messageId":"101","endLine":76,"endColumn":41},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'setPlayer' is assigned a value but never used.","Identifier","unusedVar","'test' is assigned a value but never used.",["102"],["103"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]