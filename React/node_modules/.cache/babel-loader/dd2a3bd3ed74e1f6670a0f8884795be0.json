{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maksim\\\\Desktop\\\\KalamburREST\\\\Frontend\\\\kalambury\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport './styles/board.css';\nimport TextInput from './TextInput';\nimport PlayersList from './PlayersList';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const colorsRef = useRef(null);\n  const socketRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const test = colorsRef.current;\n    const context = canvas.getContext('2d');\n    let dataURL = '';\n    const colors = document.getElementsByClassName('color');\n    const current = {\n      color: 'black'\n    };\n\n    const onColorUpdate = e => {\n      current.color = e.target.className.split(' ')[1];\n    };\n\n    for (let i = 0; i < colors.length; i++) {\n      colors[i].addEventListener('click', onColorUpdate, false);\n    }\n\n    let drawing = false;\n\n    const drawLine = (x0, y0, x1, y1, color, send) => {\n      context.beginPath();\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.strokeStyle = color;\n      context.lineWidth = 2;\n      context.stroke();\n      context.closePath();\n      context.save();\n      dataURL = canvasRef.current.toDataURL('image/png');\n\n      if (!send) {\n        return;\n      }\n\n      const w = canvas.width;\n      const h = canvas.height;\n      socketRef.current.send(JSON.stringify({\n        x0: x0 / w,\n        y0: y0 / h,\n        x1: x1 / w,\n        y1: y1 / h,\n        color\n      }));\n    };\n\n    const onMouseDown = e => {\n      drawing = true;\n      current.x = e.clientX || e.touches[0].clientX;\n      current.y = e.clientY || e.touches[0].clientY;\n    };\n\n    const onMouseMove = e => {\n      if (!drawing) {\n        return;\n      }\n\n      drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n      current.x = e.clientX || e.touches[0].clientX;\n      current.y = e.clientY || e.touches[0].clientY;\n    };\n\n    const onMouseUp = e => {\n      if (!drawing) {\n        return;\n      }\n\n      drawing = false;\n      drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n    };\n\n    const throttle = (callback, delay) => {\n      let previousCall = new Date().getTime();\n      return function () {\n        const time = new Date().getTime();\n\n        if (time - previousCall >= delay) {\n          previousCall = time;\n          callback.apply(null, arguments);\n        }\n      };\n    };\n\n    canvas.addEventListener('mousedown', onMouseDown, false);\n    canvas.addEventListener('mouseup', onMouseUp, false);\n    canvas.addEventListener('mouseout', onMouseUp, false);\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\n    canvas.addEventListener('touchstart', onMouseDown, false);\n    canvas.addEventListener('touchend', onMouseUp, false);\n    canvas.addEventListener('touchcancel', onMouseUp, false);\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\n\n    const onResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      let img = document.createElement('img');\n      img.src = dataURL;\n      context.drawImage(img, 0, 0);\n      context.restore();\n    };\n\n    window.addEventListener('resize', onResize, false);\n    onResize();\n\n    const onDrawingEvent = data => {\n      const w = canvas.width;\n      const h = canvas.height;\n      drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\n    };\n\n    socketRef.current = new WebSocket('ws://' + window.location.host);\n\n    socketRef.current.onopen = e => {\n      console.log('open', e);\n    };\n\n    socketRef.current.onmessage = e => {\n      onDrawingEvent(JSON.parse(e.data));\n    };\n\n    socketRef.current.onerror = e => {\n      console.log('error', e);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: colorsRef,\n          className: \"colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color pink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color purple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color gray\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"whiteboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayersList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Board, \"WPe/0a+txvn6LYS6VZFZ5yTQeMU=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Maksim/Desktop/KalamburREST/Frontend/kalambury/src/components/Board.js"],"names":["React","useRef","useEffect","TextInput","PlayersList","Header","Board","canvasRef","colorsRef","socketRef","canvas","current","test","context","getContext","dataURL","colors","document","getElementsByClassName","color","onColorUpdate","e","target","className","split","i","length","addEventListener","drawing","drawLine","x0","y0","x1","y1","send","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","save","toDataURL","w","width","h","height","JSON","stringify","onMouseDown","x","clientX","touches","y","clientY","onMouseMove","onMouseUp","throttle","callback","delay","previousCall","Date","getTime","time","apply","arguments","onResize","window","innerWidth","innerHeight","img","createElement","src","drawImage","restore","onDrawingEvent","data","WebSocket","location","host","onopen","console","log","onmessage","parse","onerror"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './styles/board.css';\r\nimport TextInput from './TextInput';\r\nimport PlayersList from './PlayersList';\r\nimport Header from './Header';\r\n\r\nconst Board = () => {\r\n  const canvasRef = useRef(null);\r\n  const colorsRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const test = colorsRef.current;\r\n    const context = canvas.getContext('2d');\r\n    let dataURL = '';\r\n    const colors = document.getElementsByClassName('color');\r\n    const current = {\r\n      color: 'black',\r\n    };\r\n    const onColorUpdate = (e) => {\r\n      current.color = e.target.className.split(' ')[1];\r\n    };\r\n    for (let i = 0; i < colors.length; i++) {\r\n      colors[i].addEventListener('click', onColorUpdate, false);\r\n    }\r\n    \r\n    let drawing = false;\r\n    const drawLine = (x0, y0, x1, y1, color, send) => {\r\n      context.beginPath();\r\n      context.moveTo(x0, y0);\r\n      context.lineTo(x1, y1);\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n      context.closePath();\r\n      context.save();\r\n      dataURL = canvasRef.current.toDataURL('image/png');\r\n      if (!send) { return; }\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n      socketRef.current.send(JSON.stringify({\r\n        x0: x0 / w,\r\n        y0: y0 / h,\r\n        x1: x1 / w,\r\n        y1: y1 / h,\r\n        color,\r\n      }));\r\n    };\r\n\r\n    const onMouseDown = (e) => {\r\n      drawing = true;\r\n      current.x = e.clientX || e.touches[0].clientX;\r\n      current.y = e.clientY || e.touches[0].clientY;\r\n    };\r\n    \r\n    const onMouseMove = (e) => {\r\n      if (!drawing) { return; }\r\n      drawLine(current.x, current.y, e.clientX ||\r\n      e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\r\n      current.x = e.clientX || e.touches[0].clientX;\r\n      current.y = e.clientY || e.touches[0].clientY;\r\n    };\r\n    \r\n    const onMouseUp = (e) => {\r\n      if (!drawing) { return; }\r\n      drawing = false;\r\n      drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY,\r\ncurrent.color, true);\r\n    };\r\n\r\n    const throttle = (callback, delay) => {\r\n      let previousCall = new Date().getTime();\r\n      return function() {\r\n        const time = new Date().getTime();\r\n        if ((time - previousCall) >= delay) {\r\n          previousCall = time;\r\n          callback.apply(null, arguments);\r\n        }\r\n      };\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown, false);\r\n    canvas.addEventListener('mouseup', onMouseUp, false);\r\n    canvas.addEventListener('mouseout', onMouseUp, false);\r\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\r\n    canvas.addEventListener('touchstart', onMouseDown, false);\r\n    canvas.addEventListener('touchend', onMouseUp, false);\r\n    canvas.addEventListener('touchcancel', onMouseUp, false);\r\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\r\n\r\n    const onResize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      let img = document.createElement('img');\r\n      img.src = dataURL;\r\n      context.drawImage(img, 0,0);\r\n      context.restore();\r\n    };\r\n\r\n    window.addEventListener('resize', onResize, false);\r\n    onResize();\r\n\r\n    const onDrawingEvent = (data) => {\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n      drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\r\n    }\r\n\r\n    socketRef.current = new WebSocket('ws://'+ window.location.host)\r\n    socketRef.current.onopen = e => {\r\n      console.log('open', e)\r\n    }\r\n\r\n    socketRef.current.onmessage = e => {\r\n      onDrawingEvent(JSON.parse(e.data))\r\n    }\r\n\r\n    socketRef.current.onerror = e => {\r\n      console.log('error', e)\r\n    }\r\n    \r\n  }, []);\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <Header />\r\n        <div className=\"inline\">\r\n          <div ref={colorsRef} className=\"colors\">\r\n            <div className=\"color red\" />\r\n            <div className=\"color green\" />\r\n            <div className=\"color blue\" />\r\n            <div className=\"color yellow\" />\r\n            <div className=\"color orange\" />\r\n            <div className=\"color pink\" />\r\n            <div className=\"color purple\" />\r\n            <div className=\"color gray\" />\r\n            <div className=\"color black\" />\r\n          </div>\r\n          <div>\r\n            <canvas ref={canvasRef} className=\"whiteboard\" />\r\n            <TextInput />\r\n          </div>\r\n          <PlayersList />\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}